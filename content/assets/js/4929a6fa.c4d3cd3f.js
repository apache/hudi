"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[4919],{72974:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"developer-setup","title":"Developer Setup","description":"Pre-requisites","source":"@site/contribute/developer-setup.md","sourceDirName":".","slug":"/developer-setup","permalink":"/contribute/developer-setup","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Developer Setup","sidebar_position":4,"keywords":["hudi","ide","developer","setup"],"toc":true,"last_modified_at":"2024-08-12T17:47:57.000Z"},"sidebar":"contribute","previous":{"title":"RFC Process","permalink":"/contribute/rfc-process"},"next":{"title":"Report Security Issues","permalink":"/contribute/report-security-issues"}}');var t=s(74848),o=s(28453);const l={title:"Developer Setup",sidebar_position:4,keywords:["hudi","ide","developer","setup"],toc:!0,last_modified_at:new Date("2024-08-12T17:47:57.000Z")},r=void 0,a={},c=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"IntelliJ Setup",id:"intellij-setup",level:2},{value:"Accounts and Permissions",id:"accounts-and-permissions",level:2},{value:"Life of a Contributor",id:"life-of-a-contributor",level:2},{value:"Filing JIRAs",id:"filing-jiras",level:3},{value:"Claiming JIRAs",id:"claiming-jiras",level:3},{value:"Contributing Code",id:"contributing-code",level:3},{value:"Coding guidelines",id:"coding-guidelines",level:3},{value:"Style",id:"style",level:4},{value:"Substance",id:"substance",level:4},{value:"Tests",id:"tests",level:4},{value:"Reviewing Code/RFCs",id:"reviewing-coderfcs",level:3},{value:"Suggest Changes",id:"suggest-changes",level:3},{value:"Useful Maven commands for developers.",id:"useful-maven-commands-for-developers",level:3},{value:"Releases",id:"releases",level:2},{value:"Communication",id:"communication",level:2},{value:"Code &amp; Project Structure",id:"code--project-structure",level:2},{value:"Code WalkThrough",id:"code-walkthrough",level:2},{value:"Running unit tests and local debugger via Intellij IDE",id:"running-unit-tests-and-local-debugger-via-intellij-ide",level:2},{value:"IMPORTANT REMINDER FOR BELOW STEPS: When submitting a PR please make sure to NOT commit the changes mentioned in these steps, instead once testing is done make sure to revert the changes and then submit a pr.",id:"important-reminder-for-below-steps-when-submitting-a-pr-please-make-sure-to-not-commit-the-changes-mentioned-in-these-steps-instead-once-testing-is-done-make-sure-to-revert-the-changes-and-then-submit-a-pr",level:4},{value:"Docker Setup",id:"docker-setup",level:2},{value:"Remote Debugging",id:"remote-debugging",level:2},{value:"Website",id:"website",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,t.jsx)(n.p,{children:"To contribute code, you need"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a GitHub account"}),"\n",(0,t.jsx)(n.li,{children:"a Linux (or) macOS development environment with Java JDK 8, Apache Maven (3.x+) installed"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"})," installed for running demo, integ tests or building website"]}),"\n",(0,t.jsxs)(n.li,{children:["for large contributions, a signed ",(0,t.jsx)(n.a,{href:"https://www.apache.org/licenses/icla.pdf",children:"Individual Contributor License\nAgreement"})," (ICLA) to the Apache\nSoftware Foundation (ASF)."]}),"\n",(0,t.jsxs)(n.li,{children:["(Recommended) Create an account on ",(0,t.jsx)(n.a,{href:"https://issues.apache.org/jira/projects/HUDI/summary",children:"JIRA"})," to open issues/find similar issues."]}),"\n",(0,t.jsxs)(n.li,{children:["(Recommended) Join our dev mailing list & slack channel, listed on ",(0,t.jsx)(n.a,{href:"/community/get-involved",children:"community"})," page."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"intellij-setup",children:"IntelliJ Setup"}),"\n",(0,t.jsx)(n.p,{children:"IntelliJ is the recommended IDE for developing Hudi. To contribute, you would need to do the following"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Fork the Hudi code on Github & then clone your own fork locally. Once cloned, we recommend building as per instructions on ",(0,t.jsx)(n.a,{href:"/docs/quick-start-guide",children:"spark quickstart"})," or ",(0,t.jsx)(n.a,{href:"/docs/flink-quick-start-guide",children:"flink quickstart"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In IntelliJ, select ",(0,t.jsx)(n.code,{children:"File"})," > ",(0,t.jsx)(n.code,{children:"New"})," > ",(0,t.jsx)(n.code,{children:"Project from Existing Sources..."})," and select the ",(0,t.jsx)(n.code,{children:"pom.xml"})," file under your local Hudi source folder."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"Project Structure"}),", select Java 1.8 as the Project SDK."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE setup java",src:s(16574).A+"",width:"1716",height:"792"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Make the following configuration in ",(0,t.jsx)(n.code,{children:"Preferences"})," or ",(0,t.jsx)(n.code,{children:"Settings"})," in newer IntelliJ so the Hudi code can compile in the IDE:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Enable annotation processing in compiler."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE setup annotation processing",src:s(26569).A+"",width:"1950",height:"1320"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Configure Maven ",(0,t.jsx)(n.em,{children:"NOT"})," to delegate IDE build/run actions to Maven so you can run tests in IntelliJ directly."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"IDE setup maven 1",src:s(19025).A+"",width:"1942",height:"704"}),"\n",(0,t.jsx)(n.img,{alt:"IDE setup maven 2",src:s(42778).A+"",width:"2218",height:"1668"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If you switch maven build profile, e.g., from Spark 3.2 to Spark 3.3, you need to first build Hudi in the command line first and ",(0,t.jsx)(n.code,{children:"Reload All Maven Projects"})," in IntelliJ like below,\nso that IntelliJ re-indexes the code."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE setup reload",src:s(54305).A+"",width:"1180",height:"1302"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["[Recommended] We have embraced the code style largely based on ",(0,t.jsx)(n.a,{href:"https://google.github.io/styleguide/javaguide.html",children:"google format"}),". Please set up your IDE with style files from ",(0,t.jsx)(n.a,{href:"https://github.com/apache/hudi/tree/master/style",children:"<project root>/style/"}),". These instructions have been tested on IntelliJ."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open ",(0,t.jsx)(n.code,{children:"Settings"})," in IntelliJ"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install and activate CheckStyle plugin"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE_setup_checkstyle_1",src:s(27445).A+"",width:"2042",height:"1396"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"Settings"})," > ",(0,t.jsx)(n.code,{children:"Tools"})," > ",(0,t.jsx)(n.code,{children:"Checkstyle"}),", use a recent version, e.g., 10.17.0"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE_setup_checkstyle_2",src:s(7070).A+"",width:"2046",height:"1400"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Click on ",(0,t.jsx)(n.code,{children:"+"}),', add the style/checkstyle.xml file, and name the configuration as "Hudi Checks"']}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE_setup_checkstyle_3",src:s(82855).A+"",width:"2046",height:"1398"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Activate the checkstyle configuration by checking ",(0,t.jsx)(n.code,{children:"Active"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE_setup_checkstyle_4",src:s(3240).A+"",width:"2046",height:"1400"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open ",(0,t.jsx)(n.code,{children:"Settings"})," > ",(0,t.jsx)(n.code,{children:"Editor"})," > ",(0,t.jsx)(n.code,{children:"Code Style"})," > ",(0,t.jsx)(n.code,{children:"Java"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:['Select "Project" as the "Scheme".  Then, go to the settings, open ',(0,t.jsx)(n.code,{children:"Import Scheme"})," > ",(0,t.jsx)(n.code,{children:"CheckStyle Configuration"}),", select ",(0,t.jsx)(n.code,{children:"style/checkstyle.xml"})," to load"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE_setup_code_style_java_before",src:s(78492).A+"",width:"2046",height:"1400"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["After loading the configuration, you should see that the ",(0,t.jsx)(n.code,{children:"Indent"})," and ",(0,t.jsx)(n.code,{children:"Continuation indent"})," become 2 and 4, from 4 and 8, respectively"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IDE_setup_code_style_java_after",src:s(34827).A+"",width:"2046",height:"1402"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Apply/Save the changes"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["[Recommended] Set up the ",(0,t.jsx)(n.a,{href:"https://plugins.jetbrains.com/plugin/7642-save-actions",children:"Save Action Plugin"})," to auto format & organize imports on save. The Maven Compilation life-cycle will fail if there are checkstyle violations."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["[Recommended] As it is required to add ",(0,t.jsx)(n.a,{href:"https://www.apache.org/legal/src-headers#headers",children:"Apache License header"}),' to all source files, configuring "Copyright" settings as shown below will come in handy.']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"IDE setup copyright 1",src:s(28603).A+"",width:"2218",height:"1668"}),"\n",(0,t.jsx)(n.img,{alt:"IDE setup copyright 2",src:s(73568).A+"",width:"2218",height:"1668"})]}),"\n",(0,t.jsx)(n.h2,{id:"accounts-and-permissions",children:"Accounts and Permissions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://issues.apache.org/jira/projects/HUDI/issues",children:"Hudi issue tracker (JIRA)"}),":\nAnyone can access it and browse issues. Anyone can register an account and login\nto create issues or add comments. Only contributors can be assigned issues. If\nyou want to be assigned issues, a PMC member can add you to the project contributor\ngroup.  Email the dev mailing list to ask to be added as a contributor, and include your ASF Jira username."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://cwiki.apache.org/confluence/display/HUDI",children:"Hudi Wiki Space"}),":\nAnyone has read access. If you wish to contribute changes, please create an account and\nrequest edit access on the dev@ mailing list (include your Wiki account user ID)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Pull requests can only be merged by a HUDI committer, listed ",(0,t.jsx)(n.a,{href:"https://incubator.apache.org/projects/hudi",children:"here"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.apache.org/foundation/voting",children:"Voting on a release"}),": Everyone can vote.\nOnly Hudi PMC members should mark their votes as binding."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"life-of-a-contributor",children:"Life of a Contributor"}),"\n",(0,t.jsx)(n.p,{children:"This document details processes and procedures we follow to make contributions to the project and take it forward.\nIf you are looking to ramp up into the project as a contributor, we highly encourage you to read this guide in full, familiarize yourself with the workflow\nand more importantly also try to improve the process along the way as well."}),"\n",(0,t.jsx)(n.h3,{id:"filing-jiras",children:"Filing JIRAs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Hudi uses JIRA to manage issues. First, familiarize yourself with the various ",(0,t.jsx)(n.a,{href:"https://issues.apache.org/jira/projects/HUDI/components",children:"components"})," against which issues are filed in Hudi."]}),"\n",(0,t.jsx)(n.li,{children:"Make an attempt to find an existing JIRA, that may solve the same issue you are reporting. When in doubt, you can always email the mailing list so that the community can provide early feedback,\npoint out any similar JIRAs or RFCs."}),"\n",(0,t.jsxs)(n.li,{children:["Try to gauge whether this JIRA needs an ",(0,t.jsx)(n.a,{href:"https://cwiki.apache.org/confluence/display/HUDI/RFC+Process",children:"RFC"}),". As always, email the mailing list if unsure. If you need an RFC since the change is\nlarge in scope, then please follow the wiki instructions to get the process rolling along."]}),"\n",(0,t.jsxs)(n.li,{children:["While raising a new JIRA or updating an existing one, please make sure to do the following","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The issue ",(0,t.jsx)(n.code,{children:"type"})," and ",(0,t.jsx)(n.code,{children:"components"})," (when resolving the ticket) are set correctly"]}),"\n",(0,t.jsxs)(n.li,{children:["If you intend to target the JIRA for a specific release, please fill in the ",(0,t.jsx)(n.code,{children:"fix version(s)"})," field, with the ",(0,t.jsx)(n.a,{href:"https://issues.apache.org/jira/projects/HUDI/releases",children:"release number"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Summary should be descriptive enough to catch the essence of the problem/ feature"}),"\n",(0,t.jsx)(n.li,{children:"Where necessary, capture the version of Hudi/Spark/Hive/Hadoop/Cloud environments in the ticket"}),"\n",(0,t.jsxs)(n.li,{children:["Whenever possible, provide steps to reproduce via sample code or on the ",(0,t.jsx)(n.a,{href:"https://hudi.apache.org/docker_demo",children:"docker setup"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["All newly filed JIRAs are placed in the ",(0,t.jsx)(n.code,{children:"NEW"})," state. If you are sure about this JIRA representing valid, scoped piece of work, please click ",(0,t.jsx)(n.code,{children:"Accept Issue"})," to move it ",(0,t.jsx)(n.code,{children:"OPEN"})," state"]}),"\n",(0,t.jsx)(n.li,{children:"If you are not sure, please wait for a PMC/Committer to confirm/triage the issue and accept it. This process avoids contributors spending time on JIRAs with unclear scope."}),"\n",(0,t.jsxs)(n.li,{children:["Whenever possible, break down large JIRAs (e.g JIRAs resulting from an ",(0,t.jsx)(n.a,{href:"https://cwiki.apache.org/confluence/display/HUDI/RFC+Process",children:"RFC"}),") into ",(0,t.jsx)(n.code,{children:"sub tasks"})," by clicking ",(0,t.jsx)(n.code,{children:"More > create sub-task"})," from the parent JIRA ,\nso that the community can contribute at large and help implement it much quickly. We recommend prefixing such JIRA titles with ",(0,t.jsx)(n.code,{children:"[UMBRELLA]"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"claiming-jiras",children:"Claiming JIRAs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Finding a JIRA to work on","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If you are new to the project, you can ramp up by picking up any issues tagged with the ",(0,t.jsx)(n.a,{href:"https://issues.apache.org/jira/issues/?jql=project+%3D+HUDI+AND+component+%3D+newbie",children:"newbie"})," component."]}),"\n",(0,t.jsx)(n.li,{children:"If you want to work on some higher priority issue, then scout for Open issues against the next release on the JIRA, engage on unassigned/inactive JIRAs and offer help."}),"\n",(0,t.jsxs)(n.li,{children:["Issues tagged with ",(0,t.jsx)(n.code,{children:"Usability"})," , ",(0,t.jsx)(n.code,{children:"Code Cleanup"}),", ",(0,t.jsx)(n.code,{children:"Testing"})," components often present excellent opportunities to make a great impact."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"If you don't have perms to self-assign JIRAs, please email the dev mailing list with your JIRA id and a small intro for yourself. We'd be happy to add you as a contributor."}),"\n",(0,t.jsxs)(n.li,{children:['As courtesy, if you are unable to continue working on a JIRA, please move it back to "OPEN" state and un-assign yourself.',"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If a JIRA or its corresponding pull request has been inactive for a week, awaiting feedback from you, PMC/Committers could choose to re-assign them to another contributor."}),"\n",(0,t.jsx)(n.li,{children:"Such re-assignment process would be communicated over JIRA/GitHub comments, checking with the original contributor on his/her intent to continue working on the issue."}),"\n",(0,t.jsx)(n.li,{children:"You can also contribute by helping others contribute. So, if you don't have cycles to work on a JIRA and another contributor offers help, take it!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"contributing-code",children:"Contributing Code"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Once you finalize on a project/task, please open a new JIRA or assign an existing one to yourself.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Almost all PRs should be linked to a JIRA. It's always good to have a JIRA upfront to avoid duplicating efforts."}),"\n",(0,t.jsxs)(n.li,{children:["If the changes are minor, then ",(0,t.jsx)(n.code,{children:"[MINOR]"})," prefix can be added to Pull Request title without a JIRA. Below are some tips to judge ",(0,t.jsx)(n.strong,{children:"MINOR"})," Pull Request :","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"trivial fixes (for example, a typo, a broken link, intellisense or an obvious error)"}),"\n",(0,t.jsx)(n.li,{children:"the change does not alter functionality or performance in any way"}),"\n",(0,t.jsx)(n.li,{children:"changed lines less than 100"}),"\n",(0,t.jsx)(n.li,{children:"obviously judge that the PR would pass without waiting for CI / CD verification"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"But, you may be asked to file a JIRA, if reviewer deems it necessary"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Before you begin work,","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Claim the JIRA using the process above and assign the JIRA to yourself."}),"\n",(0,t.jsx)(n.li,{children:'Click "Start Progress" on the JIRA, which tells everyone that you are working on the issue actively.'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["[Optional] Familiarize yourself with internals of Hudi using content on this page, as well as ",(0,t.jsx)(n.a,{href:"https://cwiki.apache.org/confluence/display/HUDI",children:"wiki"})]}),"\n",(0,t.jsxs)(n.li,{children:["Make your code change","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Get existing tests to pass using ",(0,t.jsx)(n.code,{children:"mvn clean install -DskipITs"})]}),"\n",(0,t.jsx)(n.li,{children:"Add adequate tests for your new functionality"}),"\n",(0,t.jsx)(n.li,{children:"For involved changes, it's best to test the changes in real production environments and report the results in the PR."}),"\n",(0,t.jsx)(n.li,{children:"For website changes, please build the site locally & test navigation, formatting & links thoroughly"}),"\n",(0,t.jsxs)(n.li,{children:["If your code change changes some aspect of documentation (e.g new config, default value change),\nplease ensure there is another PR to ",(0,t.jsx)(n.a,{href:"https://github.com/apache/hudi/tree/asf-site/README.md",children:"update the docs"})," as well."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Sending a Pull Request","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Format commit and the pull request title like ",(0,t.jsx)(n.code,{children:"[HUDI-XXX] Fixes bug in Spark Datasource"}),",\nwhere you replace ",(0,t.jsx)(n.code,{children:"HUDI-XXX"})," with the appropriate JIRA issue."]}),"\n",(0,t.jsxs)(n.li,{children:["Pull request titles must have either ",(0,t.jsx)(n.code,{children:"[HUDI-XXX]"})," or ",(0,t.jsx)(n.code,{children:"[MINOR]"})," in their title. Note the brackets and capitalization."]}),"\n",(0,t.jsx)(n.li,{children:"Please ensure your commit message body is descriptive of the change. Bulleted summary would be appreciated."}),"\n",(0,t.jsx)(n.li,{children:"You must follow the instructions in the template and fill out all fields to pass our compliance checks."}),"\n",(0,t.jsx)(n.li,{children:"Do not remove or modify any headings in the template."}),"\n",(0,t.jsx)(n.li,{children:"Push your commit to your own fork/branch & create a pull request (PR) against the Hudi repo."}),"\n",(0,t.jsx)(n.li,{children:"If you don't hear back within 3 days on the PR, please send an email to the dev @ mailing list."}),"\n",(0,t.jsx)(n.li,{children:"Address code review comments & keep pushing changes to your fork/branch, which automatically updates the PR"}),"\n",(0,t.jsx)(n.li,{children:"Before your change can be merged, it should be squashed into a single commit for cleaner commit history."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Finally, once your pull request is merged, make sure to ",(0,t.jsx)(n.code,{children:"Close"})," the JIRA."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"coding-guidelines",children:"Coding guidelines"}),"\n",(0,t.jsx)(n.p,{children:'Our code can benefit from contributors speaking the same "language" when authoring code. After all, it gets read a lot more than it gets\nwritten. So optimizing for "reads" is a good goal. The list below is a set of guidelines, that contributors strive to upkeep and reflective\nof how we want to evolve our code in the future.'}),"\n",(0,t.jsx)(n.h4,{id:"style",children:"Style"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Formatting"})," We should rely on checkstyle and spotless to auto fix formatting; automate this completely. Where we cannot,\nwe will err on the side of not taxing contributors with manual effort."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Refactoring"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Refactor with purpose; any refactor suggested should be attributable to functionality that now becomes easy to implement."}),"\n",(0,t.jsx)(n.li,{children:"A class is asking to be refactored, when it has several overloaded responsibilities/have sets of fields/methods which are used more cohesively than others."}),"\n",(0,t.jsx)(n.li,{children:"Try to name tests using the given-when-then model, that cleans separates preconditions (given), an action (when), and assertions (then)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Naming things"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Let's name uniformly; using the same word to denote the same concept. e.g: bootstrap vs external vs source, when referring to bootstrapped tables.\nMaybe they all mean the same, but having one word makes the code lot more easily readable."}),"\n",(0,t.jsx)(n.li,{children:"Let's name consistently with Hudi terminology. e.g dataset vs table, base file vs data file."}),"\n",(0,t.jsx)(n.li,{children:"Class names preferably are nouns (e.g Runner) which reflect their responsibility and methods are verbs (e.g run())."}),"\n",(0,t.jsx)(n.li,{children:"Avoid filler words, that don't add value e.g xxxInfo, xxxData, etc."}),"\n",(0,t.jsxs)(n.li,{children:["We name classes in code starting with ",(0,t.jsx)(n.code,{children:"Hoodie"})," and not ",(0,t.jsx)(n.code,{children:"Hudi"})," and we want to keep it that way for consistency/historical reasons."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Methods"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Individual methods should short (~20-30 lines) and have a single purpose; If you feel like it has a secondary purpose, then maybe it needs\nto be broken down more."}),"\n",(0,t.jsx)(n.li,{children:"Lesser the number of arguments, the better;"}),"\n",(0,t.jsx)(n.li,{children:"Place caller methods on top of callee methods, whenever possible."}),"\n",(0,t.jsx)(n.li,{children:'Avoid "output" arguments e.g passing in a list and filling its values within the method.'}),"\n",(0,t.jsx)(n.li,{children:"Try to limit individual if/else blocks to few lines to aid readability."}),"\n",(0,t.jsx)(n.li,{children:"Separate logical blocks of code with a newline in between e.g read a file into memory, loop over the lines."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Classes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Like method, each Class should have a single purpose/responsibility."}),"\n",(0,t.jsx)(n.li,{children:"Try to keep class files to about 200 lines of length, nothing beyond 500."}),"\n",(0,t.jsx)(n.li,{children:"Avoid stating the obvious in comments; e.g each line does not deserve a comment; Document corner-cases/special perf considerations etc clearly."}),"\n",(0,t.jsx)(n.li,{children:"Try creating factory methods/builders and interfaces wherever you feel a specific implementation may be changed down the line."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"substance",children:"Substance"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Try to avoid large PRs; if unavoidable (many times they are) please separate refactoring with the actual implementation of functionality.\ne.g renaming/breaking up a file and then changing code changes, makes the diff very hard to review."}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Licensing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Every source file needs to include the Apache license header. Every new dependency needs to have\nan open source license ",(0,t.jsx)(n.a,{href:"https://www.apache.org/legal/resolved#criteria",children:"compatible"})," with Apache."]}),"\n",(0,t.jsxs)(n.li,{children:["If you are re-using code from another apache/open-source project, licensing needs to be compatible and attribution added to ",(0,t.jsx)(n.code,{children:"LICENSE"})," file"]}),"\n",(0,t.jsx)(n.li,{children:"Please DO NOT copy paste any code from StackOverflow or other online sources, since their license attribution would be unclear. Author them yourself!"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Code Organization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Anything in ",(0,t.jsx)(n.code,{children:"hudi-common"})," cannot depend on a specific engine runtime like Spark."]}),"\n",(0,t.jsxs)(n.li,{children:["Any changes to bundles under ",(0,t.jsx)(n.code,{children:"packaging"}),", will be reviewed with additional scrutiny to avoid breakages across versions."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Code reuse"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Whenever you can, please use/enhance use existing utils classes in code (",(0,t.jsx)(n.code,{children:"CollectionUtils"}),", ",(0,t.jsx)(n.code,{children:"ParquetUtils"}),", ",(0,t.jsx)(n.code,{children:"HoodieAvroUtils"}),"). Search for classes ending in ",(0,t.jsx)(n.code,{children:"Utils"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["As a complex project, that must integrate with multiple systems, we tend to avoid dependencies like ",(0,t.jsx)(n.code,{children:"guava"}),", ",(0,t.jsx)(n.code,{children:"apache commons"})," for the sake of easy integration.\nPlease start a discussion on the mailing list, before attempting to reintroduce them"]}),"\n",(0,t.jsxs)(n.li,{children:["As a data system, that takes performance seriously, we also write pieces of infrastructure (e.g ",(0,t.jsx)(n.code,{children:"ExternalSpillableMap"}),") natively, that are optimized specifically for our scenarios.\nPlease start with them first, when solving problems."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Breaking changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Any version changes for dependencies, needs to be ideally vetted across different user environments in the community, to get enough confidence before merging."}),"\n",(0,t.jsxs)(n.li,{children:["Any changes to methods annotated with ",(0,t.jsx)(n.code,{children:"PublicAPIMethod"})," or classes annotated with ",(0,t.jsx)(n.code,{children:"PublicAPIClass"})," require upfront discussion and potentially an RFC."]}),"\n",(0,t.jsx)(n.li,{children:"Any non-backwards compatible changes similarly need upfront discussion and the functionality needs to implement an upgrade-downgrade path."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"tests",children:"Tests"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Categories"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"unit - testing basic functionality at the class level, potentially using mocks. Expected to finish quicker"}),"\n",(0,t.jsx)(n.li,{children:"functional - brings up the services needed and runs test without mocking"}),"\n",(0,t.jsx)(n.li,{children:"integration - runs subset of functional tests, on a full fledged enviroment with dockerized services"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prepare Test Data"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Many unit and functional test cases require a Hudi dataset to be prepared beforehand. ",(0,t.jsx)(n.code,{children:"HoodieTestTable"})," and ",(0,t.jsx)(n.code,{children:"HoodieWriteableTestTable"})," are dedicated test utility classes for this purpose. Use them whenever appropriate, and add new APIs to them when needed."]}),"\n",(0,t.jsx)(n.li,{children:"When add new APIs in the test utility classes, overload APIs with variety of arguments to do more heavy-liftings for callers."}),"\n",(0,t.jsxs)(n.li,{children:["In most scenarios, you won't need to use ",(0,t.jsx)(n.code,{children:"FileCreateUtils"})," directly."]}),"\n",(0,t.jsxs)(n.li,{children:["If test cases require interaction with actual ",(0,t.jsx)(n.code,{children:"HoodieRecord"}),"s, use ",(0,t.jsx)(n.code,{children:"HoodieWriteableTestTable"})," (and ",(0,t.jsx)(n.code,{children:"HoodieTestDataGenerator"})," probably). Otherwise, ",(0,t.jsx)(n.code,{children:"HoodieTestTable"})," that manipulates empty files shall serve the purpose."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Strive for Readability"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Avoid writing flow controls for different assertion cases. Split to a new test case when appropriate."}),"\n",(0,t.jsx)(n.li,{children:"Use plain for-loop to avoid try-catch in lambda block. Declare exceptions is okay."}),"\n",(0,t.jsx)(n.li,{children:"Use static import for constants and static helper methods to avoid lengthy code."}),"\n",(0,t.jsx)(n.li,{children:"Avoid reusing local variable names. Create new variables generously."}),"\n",(0,t.jsxs)(n.li,{children:["Keep helper methods local to the test class until it becomes obviously generic and re-useable. When that happens, move the helper method to the right utility class. For example, ",(0,t.jsx)(n.code,{children:"Assertions"})," contains common assert helpers, and ",(0,t.jsx)(n.code,{children:"SchemaTestUtil"})," is for schema related helpers."]}),"\n",(0,t.jsxs)(n.li,{children:["Avoid putting new helpers in ",(0,t.jsx)(n.code,{children:"HoodieTestUtils"})," and ",(0,t.jsx)(n.code,{children:"HoodieClientTestUtils"}),", which are named too generic. Eventually, all test helpers shall be categorized properly."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"reviewing-coderfcs",children:"Reviewing Code/RFCs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All pull requests would be subject to code reviews, from one or more of the PMC/Committers."}),"\n",(0,t.jsx)(n.li,{children:'Typically, each PR will get an "Assignee" based on their area of expertise, who will work with you to land the PR.'}),"\n",(0,t.jsxs)(n.li,{children:["Code reviews are vital, but also often time-consuming for everyone involved. Below are some principles which could help align us better.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Reviewers need to provide actionable, concrete feedback that states what needs to be done to get the PR closer to landing."}),"\n",(0,t.jsx)(n.li,{children:"Reviewers need to make it explicit, which of the requested changes would block the PR vs good-to-dos."}),"\n",(0,t.jsx)(n.li,{children:"Both contributors/reviewers need to keep an open mind and ground themselves to making the most technically sound argument."}),"\n",(0,t.jsx)(n.li,{children:"If progress is hard, please involve another PMC member/Committer to share another perspective."}),"\n",(0,t.jsx)(n.li,{children:"Staying humble and eager to learn, goes a long way in ensuring these reviews are smooth."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Reviewers are expected to uphold the code quality, standards outlined above."}),"\n",(0,t.jsx)(n.li,{children:'When merging PRs, always make sure you are squashing the commits using the "Squash and Merge" feature in Github'}),"\n",(0,t.jsxs)(n.li,{children:["When necessary/appropriate, reviewers could make changes themselves to PR branches, with the intent to get the PR landed sooner. (see ",(0,t.jsx)(n.a,{href:"https://cwiki.apache.org/confluence/display/HUDI/Resources#Resources-PushingChangesToPRs",children:"how-to"}),")\nReviewers should seek explicit approval from author, before making large changes to the original PR."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"suggest-changes",children:"Suggest Changes"}),"\n",(0,t.jsxs)(n.p,{children:["We welcome new ideas and suggestions to improve the project, along any dimensions - management, processes, technical vision/direction. To kick start a discussion on the mailing thread\nto effect change and source feedback, start a new email thread with the ",(0,t.jsx)(n.code,{children:"[DISCUSS]"})," prefix and share your thoughts. If your proposal leads to a larger change, then it may be followed up\nby a ",(0,t.jsx)(n.a,{href:"https://www.apache.org/foundation/voting",children:"vote"})," by a PMC member or others (depending on the specific scenario).\nFor technical suggestions, you can also leverage ",(0,t.jsx)(n.a,{href:"https://cwiki.apache.org/confluence/display/HUDI/RFC+Process",children:"our RFC Process"})," to outline your ideas in greater detail."]}),"\n",(0,t.jsx)(n.h3,{id:"useful-maven-commands-for-developers",children:"Useful Maven commands for developers."}),"\n",(0,t.jsx)(n.p,{children:"Listing out some of the maven commands that could be useful for developers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Compile/build entire project"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn clean package -DskipTests \n"})}),"\n",(0,t.jsx)(n.p,{children:"Default profile is spark2 and scala2.11"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For continuous development, you may want to build only the modules of interest. for eg, if you have been working with\ndeltastreamer, you can build using this command instead of entire project. Majority of time goes into building all different bundles we have\nlike flink bundle, presto bundle, trino bundle etc. But if you are developing something confined to hudi-utilties, you can achieve faster\nbuild times."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn package -DskipTests -pl packaging/hudi-utilities-bundle/ -am\n"})}),"\n",(0,t.jsx)(n.p,{children:"To enable multi-threaded building, you can add -T."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn -T 2C package -DskipTests -pl packaging/hudi-utilities-bundle/ -am\n"})}),"\n",(0,t.jsx)(n.p,{children:"This command will use 2 parallel threads to build."}),"\n",(0,t.jsx)(n.p,{children:"You can also confine the build to just one module if need be."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn -T 2C package -DskipTests -pl hudi-spark-datasource/hudi-spark -am\n"})}),"\n",(0,t.jsx)(n.p,{children:'Note: "-am" will build all dependent modules as well.\nIn local laptop, entire project build can take somewhere close to 7 to 10 mins. While buildig just hudi-spark-datasource/hudi-spark\nwith multi-threaded, could get your compilation in 1.5 to 2 mins.'}),"\n",(0,t.jsx)(n.p,{children:"If you wish to run any single test class in java."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn test -Punit-tests -pl hudi-spark-datasource/hudi-spark/ -am -B -DfailIfNoTests=false -Dtest=TestCleaner\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you wish to run a single test method in java."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn test -Punit-tests -pl hudi-spark-datasource/hudi-spark/ -am -B -DfailIfNoTests=false -Dtest=TestCleaner#testKeepLatestCommitsMOR \n"})}),"\n",(0,t.jsx)(n.p,{children:"To filter particular scala test:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'mvn -Dsuites="org.apache.spark.sql.hudi.TestSpark3DDL @Test Chinese table " -Dtest=abc -DfailIfNoTests=false test -pl packaging/hudi-spark-bundle -am\n'})}),"\n",(0,t.jsx)(n.p,{children:'-Dtest=abc will assist in skipping all java tests.\n-Dsuites="org.apache.spark.sql.hudi.TestSpark3DDL @Test Chinese table " filters for a single scala test.'}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Run an Integration Test"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"mvn -T 2C -Pintegration-tests -DfailIfNoTests=false -Dit.test=ITTestHoodieSanity#testRunHoodieJavaAppOnMultiPartitionKeysMORTable verify\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"verify"})," phase runs the integration test and cleans up the docker cluster after execution. To retain the docker cluster use\n",(0,t.jsx)(n.code,{children:"integration-test"})," phase instead."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," If you encounter ",(0,t.jsx)(n.code,{children:"unknown shorthand flag: 'H' in -H"}),", this error occurs when local environment has docker-compose version >= 2.0.\nThe latest docker-compose is accessible using ",(0,t.jsx)(n.code,{children:"docker-compose"})," whereas v1 version is accessible using ",(0,t.jsx)(n.code,{children:"docker-compose-v1"})," locally.",(0,t.jsx)("br",{}),"\nYou can use ",(0,t.jsx)(n.code,{children:"alt def"})," command to define different docker-compose versions. Refer ",(0,t.jsx)(n.a,{href:"https://github.com/dotboris/alt",children:"https://github.com/dotboris/alt"}),". ",(0,t.jsx)("br",{}),"\nUse ",(0,t.jsx)(n.code,{children:"alt use"})," to use v1 version of docker-compose while running integration test locally."]}),"\n",(0,t.jsx)(n.h2,{id:"releases",children:"Releases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Apache Hudi community plans to do minor version releases every 6 weeks or so."}),"\n",(0,t.jsxs)(n.li,{children:["If your contribution merged onto the ",(0,t.jsx)(n.code,{children:"master"})," branch after the last release, it will become part of the next release."]}),"\n",(0,t.jsx)(n.li,{children:"Website changes are regenerated on-demand basis (until automation in place to reflect immediately)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"communication",children:"Communication"}),"\n",(0,t.jsxs)(n.p,{children:["All communication is expected to align with the ",(0,t.jsx)(n.a,{href:"https://www.apache.org/foundation/policies/conduct",children:"Code of Conduct"}),".\nDiscussion about contributing code to Hudi happens on the ",(0,t.jsx)(n.a,{href:"/community/get-involved",children:"dev@ mailing list"}),". Introduce yourself!"]}),"\n",(0,t.jsx)(n.h2,{id:"code--project-structure",children:"Code & Project Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"docker"})," : Docker containers used by demo and integration tests. Brings up a mini data ecosystem locally"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-cli"})," : CLI to inspect, manage and administer datasets"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-client"})," : Spark client library to take a bunch of inserts + updates and apply them to a Hoodie table"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-common"})," : Common classes used across modules"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-hadoop-mr"})," : InputFormat implementations for ReadOptimized, Incremental, Realtime views"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-hive"})," : Manage hive tables off Hudi datasets and houses the HiveSyncTool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-integ-test"})," : Longer running integration test processes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-spark"})," : Spark datasource for writing and reading Hudi datasets. Streaming sink."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hudi-utilities"})," : Houses tools like DeltaStreamer, SnapshotCopier"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"packaging"})," : Poms for building out bundles for easier drop in to Spark, Hive, Presto, Utilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"style"}),"  : Code formatting, checkstyle files"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"code-walkthrough",children:"Code WalkThrough"}),"\n",(0,t.jsxs)(n.p,{children:["This Quick Video will give a code walkthrough to start with ",(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=N2eDfU_rQ_U",children:"watch"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"running-unit-tests-and-local-debugger-via-intellij-ide",children:"Running unit tests and local debugger via Intellij IDE"}),"\n",(0,t.jsx)(n.h4,{id:"important-reminder-for-below-steps-when-submitting-a-pr-please-make-sure-to-not-commit-the-changes-mentioned-in-these-steps-instead-once-testing-is-done-make-sure-to-revert-the-changes-and-then-submit-a-pr",children:"IMPORTANT REMINDER FOR BELOW STEPS: When submitting a PR please make sure to NOT commit the changes mentioned in these steps, instead once testing is done make sure to revert the changes and then submit a pr."}),"\n",(0,t.jsxs)(n.ol,{start:"0",children:["\n",(0,t.jsxs)(n.li,{children:["Build the project with the intended profiles via the ",(0,t.jsx)(n.code,{children:"mvn"})," cli, for example for spark 3.2 use ",(0,t.jsx)(n.code,{children:"mvn clean package -Dspark3.2 -Dscala-2.12 -DskipTests"}),"."]}),"\n",(0,t.jsx)(n.li,{children:'Install the "Maven Helper" plugin from the Intellij IDE.'}),"\n",(0,t.jsxs)(n.li,{children:["Make sure IDEA uses Maven to build/run tests:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You need to select the intended Maven profiles (using Maven tool pane in IDEA): select profiles you are targeting for example ",(0,t.jsx)(n.code,{children:"spark2.4"})," and ",(0,t.jsx)(n.code,{children:"scala-2.11"})," or ",(0,t.jsx)(n.code,{children:"spark3.2"}),", ",(0,t.jsx)(n.code,{children:"scala-2.12"})," etc."]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:".mvn/maven.config"})," file at the root of the repo w/ the the profiles you selected in the pane: ",(0,t.jsx)(n.code,{children:"-Dspark3.2"})," ",(0,t.jsx)(n.code,{children:"-Dscala-2.12"})]}),"\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:".mvn/"})," to the ",(0,t.jsx)(n.code,{children:".gitignore"})," file located in the root of the project."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Make sure you change (temporarily) the ",(0,t.jsx)(n.code,{children:"scala.binary.version"})," in the root ",(0,t.jsx)(n.code,{children:"pom.xml"})," to the intended scala profile version. For example if running with spark3 ",(0,t.jsx)(n.code,{children:"scala.binary.version"})," should be ",(0,t.jsx)(n.code,{children:"2.12"})]}),"\n",(0,t.jsxs)(n.li,{children:["Finally right click on the unit test's method signature you are trying to run, there should be an option with a mvn symbol that allows you to ",(0,t.jsx)(n.code,{children:"run <test-name>"}),", as well as an option to ",(0,t.jsx)(n.code,{children:"debug <test-name>"}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For debugging make sure to first set breakpoints in the src code see (",(0,t.jsx)(n.a,{href:"https://www.jetbrains.com/help/idea/debugging-code.html",children:"https://www.jetbrains.com/help/idea/debugging-code.html"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"docker-setup",children:"Docker Setup"}),"\n",(0,t.jsxs)(n.p,{children:["We encourage you to test your code on docker cluster please follow this for ",(0,t.jsx)(n.a,{href:"https://hudi.apache.org/docs/docker_demo",children:"docker setup"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"remote-debugging",children:"Remote Debugging"}),"\n",(0,t.jsx)(n.p,{children:"if your code fails on docker cluster you can remotely debug your code please follow the below steps."}),"\n",(0,t.jsx)(n.p,{children:"Step 1 :- Run your Delta Streamer Job with --conf as defined this will ensure to wait till you attach your intellij with Remote Debugging on port 4044"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'spark-submit \\\n  --conf spark.driver.extraJavaOptions="-Dconfig.resource=myapp.conf  -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=4044" \\\n  --class org.apache.hudi.utilities.deltastreamer.HoodieDeltaStreamer $HUDI_UTILITIES_BUNDLE \\\n  --table-type COPY_ON_WRITE \\\n  --source-class org.apache.hudi.utilities.sources.JsonKafkaSource \\\n  --source-ordering-field ts  \\\n  --base-file-format parquet \\\n  --target-base-path /user/hive/warehouse/stock_ticks_cow \\\n  --target-table stock_ticks_cow --props /var/demo/config/kafka-source.properties \\\n  --schemaprovider-class org.apache.hudi.utilities.schema.FilebasedSchemaProvider\n'})}),"\n",(0,t.jsx)(n.p,{children:"Step 2 :- Attaching Intellij (tested on Intellij Version > 2019. this steps may change acc. to intellij version)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Come to Intellij --\x3e Edit Configurations -> Remote -> Add Remote - > Put Below Configs -> Apply & Save -> Put Debug Point -> Start. ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:["Name : Hudi Remote ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:["Port : 4044 ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:["Command Line Args for Remote JVM : -agentlib",":jdwp","=transport=dt_socket,server=y,suspend=n,address=4044 ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:["Use Module ClassPath : select hudi ",(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"website",children:"Website"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://hudi.apache.org",children:"Apache Hudi site"})," is hosted on a special ",(0,t.jsx)(n.code,{children:"asf-site"})," branch. Please follow the ",(0,t.jsx)(n.code,{children:"README"})," file under ",(0,t.jsx)(n.code,{children:"docs"})," on that branch for\ninstructions on making changes to the website."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},26569:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_annotation-bdbfe3a3fe9c1b00097707190b8a7fd0.png"},27445:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_checkstyle_1-bfb3d3d83719b5d499469da181790117.png"},7070:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_checkstyle_2-627387e1620fd960aacd1291f09e8098.png"},82855:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_checkstyle_3-0568eb4d708fb57e3c537add31eb8da0.png"},3240:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_checkstyle_4-4e0367645fb0f5657d3adabf259dd5f7.png"},34827:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_code_style_java_after-25c4bdf92d9b66d750fc2318fc21db91.png"},78492:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_code_style_java_before-142791a5c75c1e19eda8cae11ec364b4.png"},28603:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_copyright_1-7738a57f8fa00720fb2f76560205c198.png"},73568:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_copyright_2-32cbdae2fdc45996148a8fbaf0ad64f3.png"},16574:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_java-ea86dafcaaa2e94d463c3fbd642fed03.png"},19025:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_maven_1-83a768b194bb75728bf993d2e13eb026.png"},42778:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_maven_2-20f1327f4747a5b36cc03268afa8efb1.png"},54305:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/IDE_setup_reload-bafc2b1a0e213d3079d84ad18f05c188.png"},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(96540);const t={},o=i.createContext(t);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);