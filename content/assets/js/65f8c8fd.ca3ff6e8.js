"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[8765],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),g=a,d=u["".concat(l,".").concat(g)]||u[g]||m[g]||o;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},45940:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={title:"Incremental Data Extraction from Postgres using Triggers and PySpark",last_modified_at:new Date("2023-10-13T23:54:38.964Z"),authors:[{name:"Soumil Shah"}],category:"blog",image:"/assets/images/video_blogs/2023-07-09-Incremental_Data_Extraction_from_Postgres_using_Triggers_and_PySpark.png",navigate:"https://www.youtube.com/watch?v=kuuHA_1Bh2A",tags:["guide","incremental-etl","postgres","pyspark","triggers","amazon aurora"]},i=void 0,s={permalink:"/videos/2023/07/09/Incremental_Data_Extraction_from_Postgres_using_Triggers_and_PySpark",source:"@site/videoBlog/2023-07-09-Incremental_Data_Extraction_from_Postgres_using_Triggers_and_PySpark.md",title:"Incremental Data Extraction from Postgres using Triggers and PySpark",description:"",date:"2023-07-09T00:00:00.000Z",formattedDate:"July 9, 2023",tags:[{label:"guide",permalink:"/videos/tags/guide"},{label:"incremental-etl",permalink:"/videos/tags/incremental-etl"},{label:"postgres",permalink:"/videos/tags/postgres"},{label:"pyspark",permalink:"/videos/tags/pyspark"},{label:"triggers",permalink:"/videos/tags/triggers"},{label:"amazon aurora",permalink:"/videos/tags/amazon-aurora"}],readingTime:0,truncated:!1,authors:[{name:"Soumil Shah"}],prevItem:{title:"Develop Incremental ETL Pipeline From Hudi Tables to Redshift Using AWS Glue and Spark",permalink:"/videos/2023/07/09/Develop_Incremental_ETL_Pipeline_From_Hudi_Tables_to_Redshift_Using_AWS_Glue_and_Spark"},nextItem:{title:"Hudi Best Practices: Handling Failed Inserts/Upserts with Error Tables",permalink:"/videos/2023/07/02/Hudi_Best_Practices_Handling_Failed_InsertsUpserts_with_Error_Tables"}},l={authorsImageUrls:[void 0]},c=[],p={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0}}]);