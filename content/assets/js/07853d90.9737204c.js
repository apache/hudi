"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[3075],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(a),c=r,h=m["".concat(s,".").concat(c)]||m[c]||u[c]||i;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},58215:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(67294);const r=function(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},26396:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(87462),r=a(67294),i=a(72389),l=a(79443);const o=function(){const e=(0,r.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=a(53810),d=a(86010);const p={tabItem:"tabItem_vU9c"};function m(e){const{lazy:t,block:a,defaultValue:i,values:l,groupId:m,className:u}=e,c=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=l??c.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),k=(0,s.lx)(h,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===i?i:i??c.find((e=>e.props.default))?.props.value??c[0]?.props.value;if(null!==N&&!h.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:v}=o(),[b,f]=(0,r.useState)(N),y=[],{blockElementScrollPositionUntilNextRender:w}=(0,s.o5)();if(null!=m){const e=g[m];null!=e&&e!==b&&h.some((t=>t.value===e))&&f(e)}const C=e=>{const t=e.currentTarget,a=y.indexOf(t),n=h[a].value;n!==b&&(w(t),f(n),null!=m&&v(m,n))},q=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=y.indexOf(e.currentTarget)+1;t=y[a]||y[0];break}case"ArrowLeft":{const a=y.indexOf(e.currentTarget)-1;t=y[a]||y[y.length-1];break}}t?.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":a},u)},h.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,key:t,ref:e=>y.push(e),onKeyDown:q,onFocus:C,onClick:C},i,{className:(0,d.Z)("tabs__item",p.tabItem,i?.className,{"tabs__item--active":b===t})}),a??t)}))),t?(0,r.cloneElement)(c.filter((e=>e.props.value===b))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},c.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==b})))))}function u(e){const t=(0,i.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},4183:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));a(26396),a(58215);const i={title:"SQL Queries",summary:"In this page, we go over querying Hudi tables using SQL",toc:!0,last_modified_at:null},l=void 0,o={unversionedId:"sql_queries",id:"version-0.14.0/sql_queries",title:"SQL Queries",description:"Hudi stores and organizes data on storage while providing different ways of querying, across a wide range of query engines.",source:"@site/versioned_docs/version-0.14.0/sql_queries.md",sourceDirName:".",slug:"/sql_queries",permalink:"/docs/0.14.0/sql_queries",editUrl:"https://github.com/apache/hudi/tree/asf-site/website/versioned_docs/version-0.14.0/sql_queries.md",tags:[],version:"0.14.0",frontMatter:{title:"SQL Queries",summary:"In this page, we go over querying Hudi tables using SQL",toc:!0,last_modified_at:null},sidebar:"docs",previous:{title:"SQL DML",permalink:"/docs/0.14.0/sql_dml"},next:{title:"Procedures",permalink:"/docs/0.14.0/procedures"}},s=[{value:"Spark SQL",id:"spark-sql",children:[{value:"Snapshot Query",id:"snapshot-query",children:[],level:3},{value:"Time Travel Query",id:"time-travel-query",children:[],level:3},{value:"Change Data Capture",id:"change-data-capture",children:[],level:3},{value:"Incremental Query",id:"incremental-query",children:[],level:3}],level:2},{value:"Flink SQL",id:"flink-sql",children:[{value:"Snapshot Query",id:"snapshot-query-1",children:[{value:"Options",id:"options",children:[],level:4}],level:3},{value:"Streaming Query",id:"streaming-query",children:[{value:"Options",id:"options-1",children:[],level:4}],level:3},{value:"Incremental Query",id:"incremental-query-1",children:[{value:"Options",id:"options-2",children:[],level:4}],level:3},{value:"Catalog",id:"catalog",children:[{value:"Options",id:"options-3",children:[],level:4}],level:3}],level:2},{value:"Hive",id:"hive",children:[{value:"Incremental Query",id:"incremental-query-2",children:[],level:3}],level:2},{value:"Presto",id:"presto",children:[],level:2},{value:"Trino",id:"trino",children:[],level:2},{value:"Impala",id:"impala",children:[],level:2},{value:"Redshift Spectrum",id:"redshift-spectrum",children:[],level:2},{value:"Doris",id:"doris",children:[],level:2},{value:"StarRocks",id:"starrocks",children:[],level:2},{value:"ClickHouse",id:"clickhouse",children:[],level:2},{value:"Support Matrix",id:"support-matrix",children:[{value:"Copy-On-Write tables",id:"copy-on-write-tables",children:[],level:3},{value:"Merge-On-Read tables",id:"merge-on-read-tables",children:[],level:3}],level:2}],d={toc:s},p="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Hudi stores and organizes data on storage while providing different ways of ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts#query-types"},"querying"),", across a wide range of query engines.\nThis page will show how to issue different queries and discuss any specific instructions for each query engine."),(0,r.kt)("h2",{id:"spark-sql"},"Spark SQL"),(0,r.kt)("p",null,"The Spark ",(0,r.kt)("a",{parentName:"p",href:"/docs/quick-start-guide"},"quickstart")," provides a good overview of how to use Spark SQL to query Hudi tables. This section will go into more advanced configurations and functionalities."),(0,r.kt)("h3",{id:"snapshot-query"},"Snapshot Query"),(0,r.kt)("p",null,"Snapshot queries are the most common query type for Hudi tables. Spark SQL supports snapshot queries on both COPY_ON_WRITE and MERGE_ON_READ tables.\nUsing session properties, you can specify various options around data skipping and indexing to optimize query performance, as shown below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- You can turn on any relevant options for data skipping and indexing. \n-- for e.g. the following turns on data skipping based on column stats\nSET hoodie.enable.data.skipping=true;\nSET hoodie.metadata.column.stats.enable=true;\nSET hoodie.metadata.enable=true;\nSELECT * FROM hudi_table\nWHERE price > 1.0 and price < 10.0\n\n-- Turn on use of record level index, to perform point queries.\nSET hoodie.metadata.record.index.enable=true;\nSELECT * FROM hudi_table \nWHERE uuid = 'c8abbe79-8d89-47ea-b4ce-4d224bae5bfa'\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Integration with Spark")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Users are encouraged to migrate to Hudi versions > 0.12.x, for the best spark experience and discouraged from using any older approaches\nusing path filters. We expect that native integration with Spark's optimized table readers along with Hudi's automatic table\nmanagement will yield great performance benefits in those versions."))),(0,r.kt)("h3",{id:"time-travel-query"},"Time Travel Query"),(0,r.kt)("p",null,"You can also query the table at a specific commit time using the ",(0,r.kt)("inlineCode",{parentName:"p"},"AS OF")," syntax. This is useful for debugging and auditing purposes, as well as for\nmachine learning pipelines where you want to train models on a specific point in time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM <table name> \nTIMESTAMP AS OF '<timestamp in yyyy-MM-dd HH:mm:ss.SSS or yyyy-MM-dd or yyyyMMddHHmmssSSS>' \nWHERE <filter conditions>\n")),(0,r.kt)("h3",{id:"change-data-capture"},"Change Data Capture"),(0,r.kt)("p",null,"Change Data Capture (CDC) queries are useful when you want to obtain all changes to a Hudi table within a given time window, along with before/after images and change operation\nof the changed records. Similar to many relational database counterparts, Hudi provides flexible ways of controlling supplemental logging levels, to balance storage/logging costs\nby materializing more versus compute costs of computing the changes on the fly, using ",(0,r.kt)("inlineCode",{parentName:"p"},"hoodie.table.cdc.supplemental.logging.mode")," configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Supported through the hudi_table_changes TVF \nSELECT * \nFROM hudi_table_changes(\n  <pathToTable | tableName>, \n  'cdc', \n  <'earliest' | <time to capture from>> \n  [, <time to capture to>]\n)\n")),(0,r.kt)("h3",{id:"incremental-query"},"Incremental Query"),(0,r.kt)("p",null,"Incremental queries are useful when you want to obtain the latest values for all records that have changed after a given commit time. They help author incremental data pipelines with\norders of magnitude efficiency over batch counterparts by only processing the changed records. Hudi users have realized ",(0,r.kt)("a",{parentName:"p",href:"https://www.uber.com/blog/ubers-lakehouse-architecture/"},"large gains")," in\nquery efficiency by using incremental queries in this fashion. Hudi supports incremental queries on both COPY_ON_WRITE and MERGE_ON_READ tables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Supported through the hudi_table_changes TVF \nSELECT * \nFROM hudi_table_changes(\n  <pathToTable | tableName>, \n  'latest_state', \n  <'earliest' | <time to capture from>> \n  [, <time to capture to>]\n)\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Incremental vs CDC Queries")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Incremental queries offer even better query efficiency than even the CDC queries above, since they amortize the cost of compactions across your data lake.\nFor e.g the table has received 10 million modifications across 1 million records over a time window, incremental queries can fetch the latest value for\n1 million records using Hudi's record level metadata. On the other hand, the CDC queries will process 10 million records and useful in cases, where you want to\nsee all changes in a given time window and not just the latest values."))),(0,r.kt)("p",null,"Please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/basic_configurations"},"configurations")," section for the important configuration options."),(0,r.kt)("h2",{id:"flink-sql"},"Flink SQL"),(0,r.kt)("p",null,"Once the Flink Hudi tables have been registered to the Flink catalog, they can be queried using the Flink SQL. It supports all query types across both Hudi table types,\nrelying on the custom Hudi input formats like Hive. Typically, notebook users and Flink SQL CLI users leverage flink sql for querying Hudi tables. Please add hudi-flink-bundle as described in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/flink-quick-start-guide"},"Flink Quickstart"),"."),(0,r.kt)("h3",{id:"snapshot-query-1"},"Snapshot Query"),(0,r.kt)("p",null,"By default, Flink SQL will try to use its optimized native readers (for e.g. reading parquet files) instead of Hive SerDes.\nAdditionally, partition pruning is applied by Flink if a partition predicate is specified in the filter. Filters push down may not be supported yet (please check Flink roadmap)."),(0,r.kt)("h4",{id:"options"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," to enable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"read.data.skipping.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to enable data skipping for batch snapshot read, by default disabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hoodie.metadata.index.column.stats.enable")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to enable column statistics (max/min)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hoodie.metadata.index.column.stats.column.list")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A"),(0,r.kt)("td",{parentName:"tr",align:null},"Columns(separated by comma) to collect the column statistics")))),(0,r.kt)("h3",{id:"streaming-query"},"Streaming Query"),(0,r.kt)("p",null,"By default, the hoodie table is read as batch, that is to read the latest snapshot data set and returns. Turns on the streaming read\nmode by setting option ",(0,r.kt)("inlineCode",{parentName:"p"},"read.streaming.enabled")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". Sets up option ",(0,r.kt)("inlineCode",{parentName:"p"},"read.start-commit")," to specify the read start offset, specifies the\nvalue as ",(0,r.kt)("inlineCode",{parentName:"p"},"earliest")," if you want to consume all the history data set."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Show an example query.\n")),(0,r.kt)("h4",{id:"options-1"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"read.streaming.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Specify ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," to read as streaming")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"read.start-commit")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"the latest commit"),(0,r.kt)("td",{parentName:"tr",align:null},"Start commit time in format 'yyyyMMddHHmmss', use ",(0,r.kt)("inlineCode",{parentName:"td"},"earliest")," to consume from the start commit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"read.streaming.skip_compaction")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to skip compaction instants for streaming read, generally for two purpose: 1) Avoid consuming duplications from compaction instants created for created by Hudi versions < 0.11.0 or when ",(0,r.kt)("inlineCode",{parentName:"td"},"hoodie.compaction.preserve.commit.metadata")," is disabled 2) When change log mode is enabled, to only consume change for right semantics.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clean.retain_commits")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"10")),(0,r.kt)("td",{parentName:"tr",align:null},"The max number of commits to retain before cleaning, when change log mode is enabled, tweaks this option to adjust the change log live time. For example, the default strategy keeps 50 minutes of change logs if the checkpoint interval is set up as 5 minutes.")))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Users are encouraged to use Hudi versions > 0.12.3, for the best experience and discouraged from using any older versions.\nSpecifically, ",(0,r.kt)("inlineCode",{parentName:"p"},"read.streaming.skip_compaction")," should only be enabled if the MOR table is compacted by Hudi with versions ",(0,r.kt)("inlineCode",{parentName:"p"},"< 0.11.0"),".\nThis is so as the ",(0,r.kt)("inlineCode",{parentName:"p"},"hoodie.compaction.preserve.commit.metadata")," feature is only introduced in Hudi versions ",(0,r.kt)("inlineCode",{parentName:"p"},">=0.11.0"),".\nOlder versions will overwrite the original commit time for each row with the compaction plan's instant time and cause\nrow-level instant range checks to not work properly."))),(0,r.kt)("h3",{id:"incremental-query-1"},"Incremental Query"),(0,r.kt)("p",null,"There are 3 use cases for incremental query:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Streaming query: specify the start commit with option ",(0,r.kt)("inlineCode",{parentName:"li"},"read.start-commit"),";"),(0,r.kt)("li",{parentName:"ol"},"Batch query: specify the start commit with option ",(0,r.kt)("inlineCode",{parentName:"li"},"read.start-commit")," and end commit with option ",(0,r.kt)("inlineCode",{parentName:"li"},"read.end-commit"),",\nthe interval is a closed one: both start commit and end commit are inclusive;"),(0,r.kt)("li",{parentName:"ol"},"Time Travel: consume as batch for an instant time, specify the ",(0,r.kt)("inlineCode",{parentName:"li"},"read.end-commit")," is enough because the start commit is latest by default.")),(0,r.kt)("h4",{id:"options-2"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"read.start-commit")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"the latest commit"),(0,r.kt)("td",{parentName:"tr",align:null},"Specify ",(0,r.kt)("inlineCode",{parentName:"td"},"earliest")," to consume from the start commit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"read.end-commit")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"the latest commit"),(0,r.kt)("td",{parentName:"tr",align:null},"--")))),(0,r.kt)("h3",{id:"catalog"},"Catalog"),(0,r.kt)("p",null,"A Hudi catalog can manage the tables created by Flink, table metadata is persisted to avoid redundant table creation.\nThe catalog in ",(0,r.kt)("inlineCode",{parentName:"p"},"hms")," mode will supplement the Hive syncing parameters automatically."),(0,r.kt)("p",null,"A SQL demo for Catalog SQL in hms mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE CATALOG hoodie_catalog\nWITH (\n  'type'='hudi',\n  'catalog.path' = '${catalog root path}', -- only valid if the table options has no explicit declaration of table path\n  'hive.conf.dir' = '${dir path where hive-site.xml is located}',\n  'mode'='hms' -- also support 'dfs' mode so that all the table metadata are stored with the filesystem\n);\n")),(0,r.kt)("h4",{id:"options-3"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"catalog.path")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Default catalog root path, it is used to infer a full table path in format: ",(0,r.kt)("inlineCode",{parentName:"td"},"${catalog.path}/${db_name}/${table_name}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"default-database")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"default")),(0,r.kt)("td",{parentName:"tr",align:null},"Default database name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hive.conf.dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Directory where hive-site.xml is located, only valid in ",(0,r.kt)("inlineCode",{parentName:"td"},"hms")," mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dfs")),(0,r.kt)("td",{parentName:"tr",align:null},"Specify as ",(0,r.kt)("inlineCode",{parentName:"td"},"hms")," to keep the table metadata with Hive metastore")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"table.external")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to create external tables, only valid under ",(0,r.kt)("inlineCode",{parentName:"td"},"hms")," mode")))),(0,r.kt)("h2",{id:"hive"},"Hive"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://hive.apache.org/"},"Hive")," has support for snapshot and incremental queries (with limitations) on Hudi tables."),(0,r.kt)("p",null,"In order for Hive to recognize Hudi tables and query correctly, the ",(0,r.kt)("inlineCode",{parentName:"p"},"hudi-hadoop-mr-bundle-<hudi.version>.jar")," needs to be\nprovided to Hive2Server ",(0,r.kt)("a",{parentName:"p",href:"https://www.cloudera.com/documentation/enterprise/5-6-x/topics/cm_mc_hive_udf.html#concept_nc3_mms_lr"},"aux jars path"),", as well as\nadditionally, the bundle needs to be put on the hadoop/hive installation across the cluster. In addition to setup above, for beeline cli access,\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"hive.input.format")," variable needs to be set to the fully qualified path name of the inputformat ",(0,r.kt)("inlineCode",{parentName:"p"},"org.apache.hudi.hadoop.HoodieParquetInputFormat"),".\nFor Tez, additionally, the ",(0,r.kt)("inlineCode",{parentName:"p"},"hive.tez.input.format")," needs to be set to ",(0,r.kt)("inlineCode",{parentName:"p"},"org.apache.hadoop.hive.ql.io.HiveInputFormat"),"."),(0,r.kt)("p",null,"Then users should be able to issue snapshot queries against the table like any other Hive table."),(0,r.kt)("h3",{id:"incremental-query-2"},"Incremental Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"# set hive session properties for incremental querying like below\n# type of query on the table\nset hoodie.<table_name>.consume.mode=INCREMENTAL;\n# Specify start timestamp to fetch first commit after this timestamp.\nset hoodie.<table_name>.consume.start.timestamp=20180924064621;\n# Max number of commits to consume from the start commit. Set this to -1 to get all commits after the starting commit.\nset hoodie.<table_name>.consume.max.commits=3;\n\n# usual hive query on hoodie table\nselect `_hoodie_commit_time`, col_1, col_2, col_4  from hudi_table where  col_1 = 'XYZ' and `_hoodie_commit_time` > '20180924064621';\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Hive incremental queries that are executed using Fetch task")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Since Hive Fetch tasks invoke InputFormat.listStatus() per partition, metadata can be listed in\nevery such listStatus() call. In order to avoid this, it might be useful to disable fetch tasks\nusing the hive session property for incremental queries: ",(0,r.kt)("inlineCode",{parentName:"p"},"set hive.fetch.task.conversion=none;")," This\nwould ensure Map Reduce execution is chosen for a Hive query, which combines partitions (comma\nseparated) and calls InputFormat.listStatus() only once with all those partitions."))),(0,r.kt)("h2",{id:"presto"},"Presto"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://prestodb.io/"},"Presto")," is a popular query engine for interactive query performance. Support for querying Hudi tables using PrestoDB is offered\nvia two connectors - Hive connector and Hudi connector (Presto version 0.275 onwards). Both connectors currently support snapshot queries on\nCOPY_ON_WRITE tables and snapshot and read optimized queries on MERGE_ON_READ Hudi tables."),(0,r.kt)("p",null,"Since Presto-Hudi integration has evolved over time, the installation instructions for PrestoDB would vary based on versions.\nPlease check the below table for query types supported and installation instructions."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"PrestoDB Version")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Installation description")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Query types supported")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"< 0.233"),(0,r.kt)("td",{parentName:"tr",align:null},"Requires the ",(0,r.kt)("inlineCode",{parentName:"td"},"hudi-presto-bundle")," jar to be placed into ",(0,r.kt)("inlineCode",{parentName:"td"},"<presto_install>/plugin/hive-hadoop2/"),", across the installation."),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on COW tables. Read optimized querying on MOR tables.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 0.233"),(0,r.kt)("td",{parentName:"tr",align:null},"No action needed. Hudi (0.5.1-incubating) is a compile time dependency."),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on COW tables. Read optimized querying on MOR tables.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 0.240"),(0,r.kt)("td",{parentName:"tr",align:null},"No action needed. Hudi 0.5.3 version is a compile time dependency."),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on both COW and MOR tables.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 0.268"),(0,r.kt)("td",{parentName:"tr",align:null},"No action needed. Hudi 0.9.0 version is a compile time dependency."),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on bootstrap tables.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 0.272"),(0,r.kt)("td",{parentName:"tr",align:null},"No action needed. Hudi 0.10.1 version is a compile time dependency."),(0,r.kt)("td",{parentName:"tr",align:null},"File listing optimizations. Improved query performance.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 0.275"),(0,r.kt)("td",{parentName:"tr",align:null},"No action needed. Hudi 0.11.0 version is a compile time dependency."),(0,r.kt)("td",{parentName:"tr",align:null},"All of the above. Native Hudi connector that is on par with Hive connector.")))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Incremental queries and point in time queries are not supported either through the Hive connector or Hudi\nconnector. However, it is in our roadmap, and you can track the development\nunder ",(0,r.kt)("a",{parentName:"p",href:"https://issues.apache.org/jira/browse/HUDI-3210"},"HUDI-3210"),"."))),(0,r.kt)("p",null,"To use the Hudi connector, please configure hudi catalog in ",(0,r.kt)("inlineCode",{parentName:"p"}," /presto-server-0.2xxx/etc/catalog/hudi.properties")," as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"connector.name=hudi\nhive.metastore.uri=thrift://xxx.xxx.xxx.xxx:9083\nhive.config.resources=.../hadoop-2.x/etc/hadoop/core-site.xml,.../hadoop-2.x/etc/hadoop/hdfs-site.xml\n")),(0,r.kt)("p",null,"To learn more about the usage of Hudi connector, please read ",(0,r.kt)("a",{parentName:"p",href:"https://prestodb.io/docs/current/connector/hudi.html"},"prestodb documentation"),"."),(0,r.kt)("h2",{id:"trino"},"Trino"),(0,r.kt)("p",null,"Similar to PrestoDB, Trino allows querying Hudi tables via either the ",(0,r.kt)("a",{parentName:"p",href:"https://trino.io/docs/current/connector/hive.html"},"Hive")," connector or\nthe native ",(0,r.kt)("a",{parentName:"p",href:"https://trino.io/docs/current/connector/hudi.html"},"Hudi")," connector (introduced in version 398). For Trino version 411 or newer,\nthe Hive connector redirects to the Hudi catalog for Hudi table reads. Ensure you configure the necessary settings for\ntable redirection when using the Hive connector on these versions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"hive.hudi-catalog-name=hudi\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Installation instructions")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We recommend using ",(0,r.kt)("inlineCode",{parentName:"p"},"hudi-trino-bundle")," version 0.12.2 or later for optimal query performance with Hive connector. Table below\nsummarizes how the support for Hudi is achieved across different versions of Trino."),(0,r.kt)("table",{parentName:"div"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Trino Version")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Installation description")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Query types supported")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"< 398"),(0,r.kt)("td",{parentName:"tr",align:null},"NA - can only use Hive connector to query Hudi tables"),(0,r.kt)("td",{parentName:"tr",align:null},"Same as that of Hive connector version < 406.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 398"),(0,r.kt)("td",{parentName:"tr",align:null},"NA - no need to place bundle jars manually, as they are compile-time dependency"),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on COW tables. Read optimized querying on MOR tables.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"< 406"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hudi-trino-bundle")," jar to be placed into ",(0,r.kt)("inlineCode",{parentName:"td"},"<trino_install>/plugin/hive")),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on COW tables. Read optimized querying on MOR tables.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 406"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hudi-trino-bundle")," jar to be placed into ",(0,r.kt)("inlineCode",{parentName:"td"},"<trino_install>/plugin/hive")),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on COW tables. Read optimized querying on MOR tables. ",(0,r.kt)("strong",{parentName:"td"},"Redirection to Hudi catalog also supported."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"> = 411"),(0,r.kt)("td",{parentName:"tr",align:null},"NA"),(0,r.kt)("td",{parentName:"tr",align:null},"Snapshot querying on COW tables. Read optimized querying on MOR tables. Hudi tables can be ",(0,r.kt)("strong",{parentName:"td"},"only")," queried by ",(0,r.kt)("a",{parentName:"td",href:"https://trino.io/docs/current/connector/hive.html#table-redirection"},"table redirection"),".")))))),(0,r.kt)("p",null,"For details on the Hudi connector, see the ",(0,r.kt)("a",{parentName:"p",href:"https://trino.io/docs/current/connector/hudi.html"},"connector documentation"),".\nBoth connectors offer 'Snapshot' queries for COW tables and 'Read Optimized' queries for MOR tables.\nSupport for ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/trinodb/trino/pull/14786"},"MOR table snapshot queries")," is anticipated shortly."),(0,r.kt)("h2",{id:"impala"},"Impala"),(0,r.kt)("p",null,"Impala (versions > 3.4) is able to query Hudi Copy-on-write tables as an ",(0,r.kt)("a",{parentName:"p",href:"https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_tables.html#external_tables"},"EXTERNAL TABLES"),"."),(0,r.kt)("p",null,"To create a Hudi read optimized table on Impala:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE EXTERNAL TABLE database.table_name\nLIKE PARQUET '/path/to/load/xxx.parquet'\nSTORED AS HUDIPARQUET\nLOCATION '/path/to/load';\n")),(0,r.kt)("p",null,"Impala is able to take advantage of the partition pruning to improve the query performance, using traditional Hive style partitioning.\nTo create a partitioned table, the folder should follow the naming convention like ",(0,r.kt)("inlineCode",{parentName:"p"},"year=2020/month=1"),"."),(0,r.kt)("p",null,"To create a partitioned Hudi table on Impala:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE EXTERNAL TABLE database.table_name\nLIKE PARQUET '/path/to/load/xxx.parquet'\nPARTITION BY (year int, month int, day int)\nSTORED AS HUDIPARQUET\nLOCATION '/path/to/load';\nALTER TABLE database.table_name RECOVER PARTITIONS;\n")),(0,r.kt)("p",null,"After Hudi made a new commit, refresh the Impala table to get the latest snapshot exposed to queries."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"REFRESH database.table_name\n")),(0,r.kt)("h2",{id:"redshift-spectrum"},"Redshift Spectrum"),(0,r.kt)("p",null,"Copy on Write Tables in Apache Hudi versions 0.5.2, 0.6.0, 0.7.0, 0.8.0, 0.9.0, 0.10.x and 0.11.x can be queried\nvia Amazon Redshift Spectrum external tables. To be able to query Hudi versions 0.10.0 and above please try latest\nversions of Redshift."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Hudi tables are supported only when AWS Glue Data Catalog is used. It's not supported when you use an Apache\nHive metastore as the external catalog."))),(0,r.kt)("p",null,"Please refer\nto ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/redshift/latest/dg/c-spectrum-external-tables.html#c-spectrum-column-mapping-hudi"},"Redshift Spectrum Integration with Apache Hudi"),"\nfor more details."),(0,r.kt)("h2",{id:"doris"},"Doris"),(0,r.kt)("p",null,"Copy on Write Tables in Hudi version 0.10.0 can be queried via Doris external tables starting from Doris version 1.1.\nPlease refer\nto ",(0,r.kt)("a",{parentName:"p",href:"https://doris.apache.org/docs/ecosystem/external-table/hudi-external-table/"},"Doris Hudi external table"),"\nfor more details on the setup."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The current default supported version of Hudi is 0.10.0 and has not been tested in other versions. More versions\nwill be supported in the future."))),(0,r.kt)("h2",{id:"starrocks"},"StarRocks"),(0,r.kt)("p",null,"Copy on Write tables in Apache Hudi 0.10.0 and above can be queried via StarRocks external tables from StarRocks version\n2.2.0. Only snapshot queries are supported currently. In future releases Merge on Read tables will also be supported.\nPlease refer to ",(0,r.kt)("a",{parentName:"p",href:"https://docs.starrocks.io/en-us/latest/using_starrocks/External_table#hudi-external-table"},"StarRocks Hudi external table"),"\nfor more details on the setup."),(0,r.kt)("h2",{id:"clickhouse"},"ClickHouse"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/intro"},"ClickHouse")," is a column-oriented database for online analytical processing. It\nprovides a read-only integration with Copy on Write Hudi tables. To query such Hudi tables, first we need\nto create a table in Clickhouse using ",(0,r.kt)("inlineCode",{parentName:"p"},"Hudi")," ",(0,r.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/sql-reference/table-functions/hudi"},"table function"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE hudi_table\n    ENGINE = Hudi(s3_base_path, [aws_access_key_id, aws_secret_access_key,])\n")),(0,r.kt)("p",null,"Please refer ",(0,r.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/engines/table-engines/integrations/hudi/"},"Clickhouse docs")," for more\ndetails."),(0,r.kt)("h2",{id:"support-matrix"},"Support Matrix"),(0,r.kt)("p",null,"Following tables show whether a given query is supported on specific query engine."),(0,r.kt)("h3",{id:"copy-on-write-tables"},"Copy-On-Write tables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Query Engine"),(0,r.kt)("th",{parentName:"tr",align:null},"Snapshot Queries"),(0,r.kt)("th",{parentName:"tr",align:null},"Incremental Queries"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Hive")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Spark SQL")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Flink SQL")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PrestoDB")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Trino")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"AWS Athena")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"BigQuery")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Impala")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Redshift Spectrum")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Doris")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"StarRocks")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ClickHouse")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N")))),(0,r.kt)("h3",{id:"merge-on-read-tables"},"Merge-On-Read tables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Query Engine"),(0,r.kt)("th",{parentName:"tr",align:null},"Snapshot Queries"),(0,r.kt)("th",{parentName:"tr",align:null},"Incremental Queries"),(0,r.kt)("th",{parentName:"tr",align:null},"Read Optimized Queries"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Hive")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Spark SQL")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Spark Datasource")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Flink SQL")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PrestoDB")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"AWS Athena")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Big Query")),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Trino")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Impala")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Redshift Spectrum")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Doris")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"StarRocks")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ClickHouse")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"N")))))}m.isMDXComponent=!0}}]);