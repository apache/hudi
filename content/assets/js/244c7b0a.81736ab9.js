"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[60676],{38560:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>r,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>n,toc:()=>d});var n=i(86840),t=i(74848),s=i(28453);const o={title:"Streaming Responsibly - How Apache Hudi maintains optimum sized files",excerpt:"Maintaining well-sized files can improve query performance significantly",author:"shivnarayan",category:"blog",image:"/assets/images/blog/2021-03-01-hudi-file-sizing.png",tags:["design","file sizing","apache hudi"]},l=void 0,r={authorsImageUrls:[void 0]},d=[];function u(e){const a={p:"p",...(0,s.R)(),...e.components};return(0,t.jsx)(a.p,{children:"Apache Hudi is a data lake platform technology that provides several functionalities needed to build and manage data lakes.\nOne such key feature that hudi provides is self-managing file sizing so that users don\u2019t need to worry about\nmanual table maintenance. Having a lot of small files will make it harder to achieve good query performance, due to query engines\nhaving to open/read/close files way too many times, to plan and execute queries. But for streaming data lake use-cases,\ninherently ingests are going to end up having smaller volume of writes, which might result in lot of small files if no special handling is done."})}function g(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},28453:(e,a,i)=>{i.d(a,{R:()=>o,x:()=>l});var n=i(96540);const t={},s=n.createContext(t);function o(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(s.Provider,{value:a},e.children)}},86840:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/03/01/hudi-file-sizing","editUrl":"https://github.com/apache/hudi/edit/asf-site/website/blog/blog/2021-03-01-hudi-file-sizing.md","source":"@site/blog/2021-03-01-hudi-file-sizing.md","title":"Streaming Responsibly - How Apache Hudi maintains optimum sized files","description":"Apache Hudi is a data lake platform technology that provides several functionalities needed to build and manage data lakes.","date":"2021-03-01T00:00:00.000Z","tags":[{"inline":true,"label":"design","permalink":"/blog/tags/design"},{"inline":true,"label":"file sizing","permalink":"/blog/tags/file-sizing"},{"inline":true,"label":"apache hudi","permalink":"/blog/tags/apache-hudi"}],"readingTime":4.33,"hasTruncateMarker":true,"authors":[{"name":"shivnarayan","key":null,"page":null}],"frontMatter":{"title":"Streaming Responsibly - How Apache Hudi maintains optimum sized files","excerpt":"Maintaining well-sized files can improve query performance significantly","author":"shivnarayan","category":"blog","image":"/assets/images/blog/2021-03-01-hudi-file-sizing.png","tags":["design","file sizing","apache hudi"]},"unlisted":false,"prevItem":{"title":"Build a data lake using amazon kinesis data stream for amazon dynamodb and apache hudi","permalink":"/blog/2021/03/04/Build-a-data-lake-using-amazon-kinesis-data-stream-for-amazon-dynamodb-and-apache-hudi"},"nextItem":{"title":"Data Lakehouse: Building the Next Generation of Data Lakes using Apache Hudi","permalink":"/blog/2021/03/01/Data-Lakehouse-Building-the-Next-Generation-of-Data-Lakes-using-Apache-Hudi"}}')}}]);