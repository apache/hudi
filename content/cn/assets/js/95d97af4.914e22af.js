"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[23438],{37753:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var i=n(34628),a=n(74848),o=n(28453);const s={title:"Employing the right indexes for fast updates, deletes in Apache Hudi",excerpt:"Detailing different indexing mechanisms in Hudi and when to use each of them",author:"vinoth",category:"blog",image:"/assets/images/blog/hudi-indexes/with-and-without-index.png",tags:["how-to","indexing","apache hudi"]},r=void 0,l={authorsImageUrls:[void 0]},d=[];function h(e){const t={a:"a",p:"p",...(0,o.R)(),...e.components};return(0,a.jsxs)(t.p,{children:["Apache Hudi employs an index to locate the file group, that an update/delete belongs to. For Copy-On-Write tables, this enables\nfast upsert/delete operations, by avoiding the need to join against the entire dataset to determine which files to rewrite.\nFor Merge-On-Read tables, this design allows Hudi to bound the amount of records any given base file needs to be merged against.\nSpecifically, a given base file needs to merged only against updates for records that are part of that base file. In contrast,\ndesigns without an indexing component (e.g: ",(0,a.jsx)(t.a,{href:"https://cwiki.apache.org/confluence/display/Hive/Hive+Transactions",children:"Apache Hive ACID"}),"),\ncould end up having to merge all the base files against all incoming updates/delete records."]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(96540);const a={},o=i.createContext(a);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:t},e.children)}},34628:e=>{e.exports=JSON.parse('{"permalink":"/cn/blog/2020/11/11/hudi-indexing-mechanisms","editUrl":"https://github.com/apache/hudi/edit/asf-site/website/blog/blog/2020-11-11-hudi-indexing-mechanisms.md","source":"@site/blog/2020-11-11-hudi-indexing-mechanisms.md","title":"Employing the right indexes for fast updates, deletes in Apache Hudi","description":"Apache Hudi employs an index to locate the file group, that an update/delete belongs to. For Copy-On-Write tables, this enables","date":"2020-11-11T00:00:00.000Z","tags":[{"inline":true,"label":"how-to","permalink":"/cn/blog/tags/how-to"},{"inline":true,"label":"indexing","permalink":"/cn/blog/tags/indexing"},{"inline":true,"label":"apache hudi","permalink":"/cn/blog/tags/apache-hudi"}],"readingTime":7.585,"hasTruncateMarker":true,"authors":[{"name":"vinoth","key":null,"page":null}],"frontMatter":{"title":"Employing the right indexes for fast updates, deletes in Apache Hudi","excerpt":"Detailing different indexing mechanisms in Hudi and when to use each of them","author":"vinoth","category":"blog","image":"/assets/images/blog/hudi-indexes/with-and-without-index.png","tags":["how-to","indexing","apache hudi"]},"unlisted":false,"prevItem":{"title":"Can Big Data Solutions Be Affordable?","permalink":"/cn/blog/2020/11/29/Can-Big-Data-Solutions-Be-Affordable"},"nextItem":{"title":"Architecting Data Lakes for the Modern Enterprise at Data Summit Connect Fall 2020","permalink":"/cn/blog/2020/10/21/Architecting-Data-Lakes-for-the-Modern-Enterprise-at-Data-Summit-Connect-Fall-2020"}}')}}]);