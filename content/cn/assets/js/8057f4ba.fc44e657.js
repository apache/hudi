"use strict";(globalThis.webpackChunkhudi=globalThis.webpackChunkhudi||[]).push([[62046],{9230:(e,n,r)=>{r.d(n,{A:()=>t});r(96540);var a=r(74848);function t({children:e,url:n}){return r.g?.window?.location?.href&&(r.g.window.location.href=n),(0,a.jsxs)("span",{children:[e,"or click ",(0,a.jsx)("a",{href:n,children:"here"})]})}},14912:e=>{e.exports=JSON.parse('{"permalink":"/cn/blog/2024/12/28/how-lakehouse-handles-concurrent-read-and-writes","editUrl":"https://github.com/apache/hudi/edit/asf-site/website/blog/blog/2024-12-28-how-lakehouse-handles-concurrent-read-and-writes.mdx","source":"@site/blog/2024-12-28-how-lakehouse-handles-concurrent-read-and-writes.mdx","title":"How lakehouse handles concurrent Read and Writes","description":"Redirecting... please wait!!","date":"2024-12-28T00:00:00.000Z","tags":[{"inline":true,"label":"blog","permalink":"/cn/blog/tags/blog"},{"inline":true,"label":"apache hudi","permalink":"/cn/blog/tags/apache-hudi"},{"inline":true,"label":"concurrency","permalink":"/cn/blog/tags/concurrency"},{"inline":true,"label":"concurrency-control","permalink":"/cn/blog/tags/concurrency-control"},{"inline":true,"label":"non-blocking concurrency-control","permalink":"/cn/blog/tags/non-blocking-concurrency-control"},{"inline":true,"label":"nbcc","permalink":"/cn/blog/tags/nbcc"},{"inline":true,"label":"medium","permalink":"/cn/blog/tags/medium"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[{"name":"Sanjeet Shukla","key":null,"page":null}],"frontMatter":{"title":"How lakehouse handles concurrent Read and Writes","author":"Sanjeet Shukla","category":"blog","image":"/assets/images/blog/2024-12-28-how-lakehouse-handles-concurrent-read-and-writes.jpeg","tags":["blog","apache hudi","concurrency","concurrency-control","non-blocking concurrency-control","nbcc","medium"]},"unlisted":false,"prevItem":{"title":"Apache Hudi 2024: A Year In Review","permalink":"/cn/blog/2024/12/29/apache-hudi-2024-a-year-in-review"},"nextItem":{"title":"Announcing Apache Hudi 1.0 and the Next Generation of Data Lakehouses","permalink":"/cn/blog/2024/12/16/announcing-hudi-1-0-0"}}')},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>l});var a=r(96540);const t={},o=a.createContext(t);function c(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(o.Provider,{value:n},e.children)}},94870:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var a=r(14912),t=r(74848),o=r(28453),c=r(9230);const l={title:"How lakehouse handles concurrent Read and Writes",author:"Sanjeet Shukla",category:"blog",image:"/assets/images/blog/2024-12-28-how-lakehouse-handles-concurrent-read-and-writes.jpeg",tags:["blog","apache hudi","concurrency","concurrency-control","non-blocking concurrency-control","nbcc","medium"]},i=void 0,s={authorsImageUrls:[void 0]},u=[];function d(e){return(0,t.jsx)(c.A,{url:"https://medium.com/@sanjeets1900/how-lakehouse-handles-concurrent-read-and-writes-b4423fecfe81",children:"Redirecting... please wait!! "})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d()}}}]);