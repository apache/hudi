"use strict";(self.webpackChunkhudi=self.webpackChunkhudi||[]).push([[25582],{42638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var a=n(90204),o=n(74848),i=n(28453);const r={title:"Registering sample dataset to Hive via beeline",excerpt:"How to manually register HUDI dataset into Hive using beeline",author:"vinoth",category:"blog",tags:["how-to","apache hudi"]},s=void 0,d={authorsImageUrls:[void 0]},l=[];function h(e){const t={code:"code",em:"em",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Hudi hive sync tool typically handles registration of the dataset into Hive metastore. In case, there are issues with quickstart around this, following page shows commands that can be used to do this manually via beeline."}),"\n",(0,o.jsxs)(t.p,{children:["Add in the ",(0,o.jsx)(t.em,{children:"packaging/hoodie-hive-bundle/target/hoodie-hive-bundle-0.4.6-SNAPSHOT.jar,"})," so that Hive can read the Hudi dataset and answer the query."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:"hive> set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;\nhive> set hive.stats.autogather=false;\nhive> add jar file:///path/to/hoodie-hive-bundle-0.5.2-SNAPSHOT.jar;\nAdded [file:///path/to/hoodie-hive-bundle-0.5.2-SNAPSHOT.jar] to class path\nAdded resources: [file:///path/to/hoodie-hive-bundle-0.5.2-SNAPSHOT.jar]\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Then, you need to create a ",(0,o.jsx)(t.em,{children:"ReadOptimized"})," Hive table as below and register the sample partitions"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:"DROP TABLE hoodie_test;\nCREATE EXTERNAL TABLE hoodie_test(`_row_key` string,\n    `_hoodie_commit_time` string,\n    `_hoodie_commit_seqno` string,\n    rider string,\n    driver string,\n    begin_lat double,\n    begin_lon double,\n    end_lat double,\n    end_lon double,\n    fare double)\n    PARTITIONED BY (`datestr` string)\n    ROW FORMAT SERDE\n    'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'\n    STORED AS INPUTFORMAT\n    'com.uber.hoodie.hadoop.HoodieInputFormat'\n    OUTPUTFORMAT\n    'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'\n    LOCATION\n    'hdfs:///tmp/hoodie/sample-table';\n     \nALTER TABLE `hoodie_test` ADD IF NOT EXISTS PARTITION (datestr='2016-03-15') LOCATION 'hdfs:///tmp/hoodie/sample-table/2016/03/15';\nALTER TABLE `hoodie_test` ADD IF NOT EXISTS PARTITION (datestr='2015-03-16') LOCATION 'hdfs:///tmp/hoodie/sample-table/2015/03/16';\nALTER TABLE `hoodie_test` ADD IF NOT EXISTS PARTITION (datestr='2015-03-17') LOCATION 'hdfs:///tmp/hoodie/sample-table/2015/03/17';\n     \nset mapreduce.framework.name=yarn;\n"})}),"\n",(0,o.jsxs)(t.p,{children:["And you can add a ",(0,o.jsx)(t.em,{children:"Realtime"})," Hive table, as below"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:"DROP TABLE hoodie_rt;\nCREATE EXTERNAL TABLE hoodie_rt(\n    `_hoodie_commit_time` string,\n    `_hoodie_commit_seqno` string,\n    `_hoodie_record_key` string,\n    `_hoodie_partition_path` string,\n    `_hoodie_file_name` string,\n    timestamp double,\n    `_row_key` string,\n    rider string,\n    driver string,\n    begin_lat double,\n    begin_lon double,\n    end_lat double,\n    end_lon double,\n    fare double)\n    PARTITIONED BY (`datestr` string)\n    ROW FORMAT SERDE\n    'com.uber.hoodie.hadoop.realtime.HoodieParquetSerde'\n    STORED AS INPUTFORMAT\n    'com.uber.hoodie.hadoop.realtime.HoodieRealtimeInputFormat'\n    OUTPUTFORMAT\n    'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'\n    LOCATION\n    'file:///tmp/hoodie/sample-table';\n     \nALTER TABLE `hoodie_rt` ADD IF NOT EXISTS PARTITION (datestr='2016-03-15') LOCATION 'file:///tmp/hoodie/sample-table/2016/03/15';\nALTER TABLE `hoodie_rt` ADD IF NOT EXISTS PARTITION (datestr='2015-03-16') LOCATION 'file:///tmp/hoodie/sample-table/2015/03/16';\nALTER TABLE `hoodie_rt` ADD IF NOT EXISTS PARTITION (datestr='2015-03-17') LOCATION 'file:///tmp/hoodie/sample-table/2015/03/17';\n"})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(96540);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}},90204:e=>{e.exports=JSON.parse('{"permalink":"/cn/blog/2019/05/14/registering-dataset-to-hive","editUrl":"https://github.com/apache/hudi/edit/asf-site/website/blog/blog/2019-05-14-registering-dataset-to-hive.md","source":"@site/blog/2019-05-14-registering-dataset-to-hive.md","title":"Registering sample dataset to Hive via beeline","description":"Hudi hive sync tool typically handles registration of the dataset into Hive metastore. In case, there are issues with quickstart around this, following page shows commands that can be used to do this manually via beeline.","date":"2019-05-14T00:00:00.000Z","tags":[{"inline":true,"label":"how-to","permalink":"/cn/blog/tags/how-to"},{"inline":true,"label":"apache hudi","permalink":"/cn/blog/tags/apache-hudi"}],"readingTime":1.32,"hasTruncateMarker":true,"authors":[{"name":"vinoth","key":null,"page":null}],"frontMatter":{"title":"Registering sample dataset to Hive via beeline","excerpt":"How to manually register HUDI dataset into Hive using beeline","author":"vinoth","category":"blog","tags":["how-to","apache hudi"]},"unlisted":false,"prevItem":{"title":"Ingesting Database changes via Sqoop/Hudi","permalink":"/cn/blog/2019/09/09/ingesting-database-changes"},"nextItem":{"title":"Big Batch vs Incremental Processing","permalink":"/cn/blog/2019/03/07/batch-vs-incremental"}}')}}]);