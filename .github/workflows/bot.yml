name: Java CI

on:
  push:
    branches:
      - master
      - 'release-*'
  pull_request:
    branches:
      - master
      - 'release-*'
env:
  MVN_ARGS: -ntp -B -V -Pwarn-log -Dorg.slf4j.simpleLogger.log.org.apache.maven.plugins.shade=warn -Dorg.slf4j.simpleLogger.log.org.apache.maven.plugins.dependency=warn

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - scalaProfile: "scala-2.11"
            sparkProfile: "spark2.4"
            flinkProfile: "flink1.13"
            skipBundleValidation: "true" # TODO: remove this var to validate spark2.4 bundle combinations
            buildOnly: "false"

          - scalaProfile: "scala-2.11"
            sparkProfile: "spark2.4"
            flinkProfile: "flink1.14"
            skipBundleValidation: "true"
            buildOnly: "true"

          - scalaProfile: "scala-2.12"
            sparkProfile: "spark2.4"
            flinkProfile: "flink1.13"
            skipBundleValidation: "true"
            buildOnly: "true"

          - scalaProfile: "scala-2.12"
            sparkProfile: "spark3.1"
            flinkProfile: "flink1.14"
            skipBundleValidation: "false"
            buildOnly: "false"

          - scalaProfile: "scala-2.12"
            sparkProfile: "spark3.2"
            flinkProfile: "flink1.14"
            skipBundleValidation: "false"
            buildOnly: "false"

          - scalaProfile: "scala-2.12"
            sparkProfile: "spark3.3"
            flinkProfile: "flink1.14"
            skipBundleValidation: "false"
            buildOnly: "false"

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          architecture: x64
      - name: Build Project
        env:
          SCALA_PROFILE: ${{ matrix.scalaProfile }}
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          FLINK_PROFILE: ${{ matrix.flinkProfile }}
        run:
          mvn clean install -Pintegration-tests -D"$SCALA_PROFILE" -D"$SPARK_PROFILE" -D"$FLINK_PROFILE" -DskipTests=true $MVN_ARGS
      - name: Quickstart Test
        env:
          SCALA_PROFILE: ${{ matrix.scalaProfile }}
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          FLINK_PROFILE: ${{ matrix.flinkProfile }}
        run:
          mvn test -Punit-tests -D"$SCALA_PROFILE" -D"$SPARK_PROFILE" -D"$FLINK_PROFILE" -DfailIfNoTests=false -pl hudi-examples/hudi-examples-flink,hudi-examples/hudi-examples-java,hudi-examples/hudi-examples-spark $MVN_ARGS
      - name: Bundle Validation
        env:
          SCALA_PROFILE: ${{ matrix.scalaProfile }}
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          FLINK_PROFILE: ${{ matrix.flinkProfile }}
        if: ${{ buildOnly != 'true' && matrix.skipBundleValidation != 'true' }}
        run: |
          HUDI_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          ./packaging/bundle-validation/ci_run.sh $HUDI_VERSION
      - name: Common Test
        env:
          SCALA_PROFILE: ${{ matrix.scalaProfile }}
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          FLINK_PROFILE: ${{ matrix.flinkProfile }}
        if: ${{ buildOnly != 'true' }}
        run:
          mvn test -Punit-tests -D"$SCALA_PROFILE" -D"$SPARK_PROFILE" -D"$FLINK_PROFILE" '-Dtest=Test*' -pl hudi-common $MVN_ARGS
      - name: Spark SQL Test
        env:
          SCALA_PROFILE: ${{ matrix.scalaProfile }}
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          FLINK_PROFILE: ${{ matrix.flinkProfile }}
        if: ${{ buildOnly != 'true' }}
        run:
          mvn test -Punit-tests -D"$SCALA_PROFILE" -D"$SPARK_PROFILE" -D"$FLINK_PROFILE" '-Dtest=Test*' -pl hudi-spark-datasource/hudi-spark $MVN_ARGS
