name: Java CI

on:
  push:
    branches:
      - master
      - 'release-*'
      - branch-0.x
  pull_request:
    paths-ignore:
      - '**.bmp'
      - '**.gif'
      - '**.jpg'
      - '**.jpeg'
      - '**.md'
      - '**.pdf'
      - '**.png'
      - '**.svg'
      - '**.yaml'
      - '.gitignore'
    branches:
      - master
      - 'release-*'
      - branch-0.x

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'master') && !contains(github.ref, 'branch-0.x') && !contains(github.ref, 'release-') }}

env:
  MVN_ARGS: -e -ntp -B -V -Dgpg.skip -Djacoco.skip -Pwarn-log -Dorg.slf4j.simpleLogger.log.org.apache.maven.plugins.shade=warn -Dorg.slf4j.simpleLogger.log.org.apache.maven.plugins.dependency=warn -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=5
  SPARK_COMMON_MODULES: hudi-spark-datasource/hudi-spark,hudi-spark-datasource/hudi-spark-common

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - sparkProfile: 'spark3.5'
            sparkArchive: 'spark-3.5.3/spark-3.5.3-bin-hadoop3.tgz'
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          architecture: x64
      - name: Build Project
        env:
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          SCALA_PROFILE: '-Dscala-2.12 -Dscala.binary.version=2.12'
        run:
          mvn clean install -T 2 $SCALA_PROFILE -D"$SPARK_PROFILE" -Pintegration-tests -DskipTests=true $MVN_ARGS
      - name: 'UT integ-test'
        env:
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          SCALA_PROFILE: '-Dscala-2.12 -Dscala.binary.version=2.12'
        run:
          mvn test $SCALA_PROFILE -D"$SPARK_PROFILE" -Pintegration-tests -DskipUTs=false -DskipITs=true -pl hudi-integ-test $MVN_ARGS
      - name: 'IT'
        env:
          SPARK_PROFILE: ${{ matrix.sparkProfile }}
          SPARK_ARCHIVE: ${{ matrix.sparkArchive }}
          SCALA_PROFILE: '-Dscala-2.12 -Dscala.binary.version=2.12'
        run: |
          echo "Downloading $SPARK_ARCHIVE"
          curl https://archive.apache.org/dist/spark/$SPARK_ARCHIVE --create-dirs -o $GITHUB_WORKSPACE/$SPARK_ARCHIVE
          tar -xvf $GITHUB_WORKSPACE/$SPARK_ARCHIVE -C $GITHUB_WORKSPACE/
          mkdir /tmp/spark-events/
          SPARK_ARCHIVE_BASENAME=$(basename $SPARK_ARCHIVE)
          export SPARK_HOME=$GITHUB_WORKSPACE/${SPARK_ARCHIVE_BASENAME%.*}
          rm -f $GITHUB_WORKSPACE/$SPARK_ARCHIVE
          docker system prune --all --force
          mvn verify $SCALA_PROFILE -D"$SPARK_PROFILE" -Pintegration-tests -pl !hudi-flink-datasource/hudi-flink $MVN_ARGS